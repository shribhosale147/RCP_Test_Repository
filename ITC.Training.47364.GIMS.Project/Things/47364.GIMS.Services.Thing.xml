<?xml version="1.0" encoding="UTF-8"?>
<Entities
 majorVersion="9"
 minorVersion="3"
 universal="password">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         inheritedValueStream=""
         name="47364.GIMS.Services.Thing"
         projectName="ITC.Training.47364.GIMS.Project"
         published="false"
         tags=""
         thingTemplate="47364.GIMS.CommonServices.ThingTemplate"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Admin.UserGroup"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Worker.UserGroup"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Admin.UserGroup"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Worker.UserGroup"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Admin.UserGroup"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Worker.UserGroup"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Admin.UserGroup"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Worker.UserGroup"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Admin.UserGroup"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="47364.GIMS.Worker.UserGroup"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="47364.GIMS.Organization"
                     type="Organization"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetDataTableEntriesContainer">
                        <ResultType
                         aspect.dataShape="47364.GIMS.ProductDetails.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetDataTableEntriesContainer">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // result: INFOTABLE dataShape: ""
                                        let TempInfo= Things["47364.GIMS.ProductDetails.DataTable"].GetDataTableEntries({
                                        	maxItems: undefined /* NUMBER {"defaultValue":500} */
                                        });
                                        
                                        let localInfoTable =TempInfo;
                                        let sort = {
                                            name: "ProductID",
                                            ascending: false
                                        };
                                        localInfoTable.Sort(sort);
                                        result = localInfoTable;
                                        result.RemoveField("key");
                                        result.RemoveField("location");
                                        result.RemoveField("source");
                                        result.RemoveField("sourceType");
                                        result.RemoveField("tags");
                                        result.RemoveField("timestamp");
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
